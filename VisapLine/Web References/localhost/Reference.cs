//------------------------------------------------------------------------------
// <auto-generated>
//     Este código fue generado por una herramienta.
//     Versión de runtime:4.0.30319.42000
//
//     Los cambios en este archivo podrían causar un comportamiento incorrecto y se perderán si
//     se vuelve a generar el código.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// Microsoft.VSDesigner generó automáticamente este código fuente, versión=4.0.30319.42000.
// 
#pragma warning disable 1591

namespace VisapLine.localhost {
    using System;
    using System.Web.Services;
    using System.Diagnostics;
    using System.Web.Services.Protocols;
    using System.Xml.Serialization;
    using System.ComponentModel;
    using System.Data;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="MovContSoap", Namespace="http://tempuri.org/")]
    public partial class MovCont : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback ConsultaMovimientoOperationCompleted;
        
        private System.Threading.SendOrPostCallback RegistrarMovimientoOperationCompleted;
        
        private System.Threading.SendOrPostCallback CrearExcelModificadoOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public MovCont() {
            this.Url = global::VisapLine.Properties.Settings.Default.VisapLine_localhost_MovCont;
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event ConsultaMovimientoCompletedEventHandler ConsultaMovimientoCompleted;
        
        /// <remarks/>
        public event RegistrarMovimientoCompletedEventHandler RegistrarMovimientoCompleted;
        
        /// <remarks/>
        public event CrearExcelModificadoCompletedEventHandler CrearExcelModificadoCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ConsultaMovimiento", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable ConsultaMovimiento(string nombre) {
            object[] results = this.Invoke("ConsultaMovimiento", new object[] {
                        nombre});
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public void ConsultaMovimientoAsync(string nombre) {
            this.ConsultaMovimientoAsync(nombre, null);
        }
        
        /// <remarks/>
        public void ConsultaMovimientoAsync(string nombre, object userState) {
            if ((this.ConsultaMovimientoOperationCompleted == null)) {
                this.ConsultaMovimientoOperationCompleted = new System.Threading.SendOrPostCallback(this.OnConsultaMovimientoOperationCompleted);
            }
            this.InvokeAsync("ConsultaMovimiento", new object[] {
                        nombre}, this.ConsultaMovimientoOperationCompleted, userState);
        }
        
        private void OnConsultaMovimientoOperationCompleted(object arg) {
            if ((this.ConsultaMovimientoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ConsultaMovimientoCompleted(this, new ConsultaMovimientoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/RegistrarMovimiento", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool RegistrarMovimiento(System.Data.DataTable dat, string nombre) {
            object[] results = this.Invoke("RegistrarMovimiento", new object[] {
                        dat,
                        nombre});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void RegistrarMovimientoAsync(System.Data.DataTable dat, string nombre) {
            this.RegistrarMovimientoAsync(dat, nombre, null);
        }
        
        /// <remarks/>
        public void RegistrarMovimientoAsync(System.Data.DataTable dat, string nombre, object userState) {
            if ((this.RegistrarMovimientoOperationCompleted == null)) {
                this.RegistrarMovimientoOperationCompleted = new System.Threading.SendOrPostCallback(this.OnRegistrarMovimientoOperationCompleted);
            }
            this.InvokeAsync("RegistrarMovimiento", new object[] {
                        dat,
                        nombre}, this.RegistrarMovimientoOperationCompleted, userState);
        }
        
        private void OnRegistrarMovimientoOperationCompleted(object arg) {
            if ((this.RegistrarMovimientoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.RegistrarMovimientoCompleted(this, new RegistrarMovimientoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/CrearExcelModificado", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string CrearExcelModificado(System.Data.DataTable dat, string input, string ouput) {
            object[] results = this.Invoke("CrearExcelModificado", new object[] {
                        dat,
                        input,
                        ouput});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void CrearExcelModificadoAsync(System.Data.DataTable dat, string input, string ouput) {
            this.CrearExcelModificadoAsync(dat, input, ouput, null);
        }
        
        /// <remarks/>
        public void CrearExcelModificadoAsync(System.Data.DataTable dat, string input, string ouput, object userState) {
            if ((this.CrearExcelModificadoOperationCompleted == null)) {
                this.CrearExcelModificadoOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCrearExcelModificadoOperationCompleted);
            }
            this.InvokeAsync("CrearExcelModificado", new object[] {
                        dat,
                        input,
                        ouput}, this.CrearExcelModificadoOperationCompleted, userState);
        }
        
        private void OnCrearExcelModificadoOperationCompleted(object arg) {
            if ((this.CrearExcelModificadoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CrearExcelModificadoCompleted(this, new CrearExcelModificadoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    public delegate void ConsultaMovimientoCompletedEventHandler(object sender, ConsultaMovimientoCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ConsultaMovimientoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ConsultaMovimientoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    public delegate void RegistrarMovimientoCompletedEventHandler(object sender, RegistrarMovimientoCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class RegistrarMovimientoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal RegistrarMovimientoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    public delegate void CrearExcelModificadoCompletedEventHandler(object sender, CrearExcelModificadoCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CrearExcelModificadoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CrearExcelModificadoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
}

#pragma warning restore 1591